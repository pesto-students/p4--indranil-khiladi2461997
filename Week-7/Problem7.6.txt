class QueueUsingStacks {
  constructor() {
    this.s1 = [];
    this.s2 = [];
  }

  enqueue(x) {
    
    this.s1.push(x);
  }

  dequeue() {
    
    if (this.s2.length === 0) {
      while (this.s1.length > 0) {
        this.s2.push(this.s1.pop());
      }
    }

    
    if (this.s2.length === 0) {
      return -1;
    }

    
    return this.s2.pop();
  }
}

function processQueries(queries) {
  const queue = new QueueUsingStacks();
  const result = [];

  for (const query of queries) {
    if (query[0] === 1) {
      queue.enqueue(query[1]);
    } else if (query[0] === 2) {
      result.push(queue.dequeue());
    }
  }

  return result;
}

// Test cases
const queries1 = [[1, 2], [1, 3], [2], [1, 4], [2]];
const queries2 = [[1, 2], [2], [2], [1, 4]];

console.log(process_queries(queries1)); // Output: [2, 3]
console.log(process_queries(queries2)); // Output: [2, -1]
