class ListNode {
  constructor(val = 0, next = null) {
    this.val = val;
    this.next = next;
  }
}

function reverseLinkedList(head) {
  let prev = null;
  let current = head;

  while (current) {
    const nextNode = current.next; 
    current.next = prev; 
    prev = current; 
    current = nextNode; 
  }

  return prev; 
}

// Helper function to print linked list
function printLinkedList(head) {
  let current = head;
  while (current) {
    console.log(current.val, end=" "); 
    current = current.next;
  }
  console.log(); 
}

// Example usage:
// Creating the linked list 1->2->3->4->5->6
const head = new ListNode(1);
head.next = new ListNode(2);
head.next.next = new ListNode(3);
head.next.next.next = new ListNode(4);
head.next.next.next.next = new ListNode(5);
head.next.next.next.next.next = new ListNode(6);

console.log("Original Linked List:");
printLinkedList(head);

// Reversing the linked list
const reversedHead = reverseLinkedList(head);

console.log("Reversed Linked List:");
printLinkedList(reversedHead);
