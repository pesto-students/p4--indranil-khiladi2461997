class TreeNode {
  constructor(val = 0, left = null, right = null) {
    this.val = val;
    this.left = left;
    this.right = right;
  }
}

function isValidBST(root, low = -Infinity, high = Infinity) {
  if (!root) {
    return true;
  }

  if (root.val <= low || root.val >= high) {
    return false;
  }

  return isValidBST(root.left, low, root.val) && isValidBST(root.right, root.val, high);
}

// Example usage:
// Constructing the binary tree [2,1,3]
const root1 = new TreeNode(2);
root1.left = new TreeNode(1);
root1.right = new TreeNode(3);

// Constructing the binary tree [5,1,4,null,null,3,6]
const root2 = new TreeNode(5);
root2.left = new TreeNode(1);
root2.right = new TreeNode(4);
root2.right.left = new TreeNode(3);
root2.right.right = new TreeNode(6);

console.log(isValidBST(root1)); // Output: True
console.log(isValidBST(root2)); // Output: False
