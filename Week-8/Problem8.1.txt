class TreeNode {
  constructor(val = 0, left = null, right = null) {
    this.val = val;
    this.left = left;
    this.right = right;
  }
}

function maxDepth(root) {
  if (!root) {
    return 0;
  } else {
    const leftDepth = maxDepth(root.left);
    const rightDepth = maxDepth(root.right);
    return Math.max(leftDepth, rightDepth) + 1;
  }
}

// Example usage:
// Constructing the binary tree [3,9,20,null,null,15,7]
const root1 = new TreeNode(3);
root1.left = new TreeNode(9);
root1.right = new TreeNode(20);
root1.right.left = new TreeNode(15);
root1.right.right = new TreeNode(7);

// Constructing the binary tree [1,null,2]
const root2 = new TreeNode(1);
root2.right = new TreeNode(2);

console.log(maxDepth(root1)); // Output: 3
console.log(maxDepth(root2)); // Output: 2
